name: Build PR

on:
  pull_request:
    types: [ opened, synchronize ]

concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4
      - name: Run tests
        run: >
          ./gradlew
          --stacktrace
          check jacocoTestReport -x :artifact-tests:test
      - name: Test publishing
        run: >
          ./gradlew
          --stacktrace
          publishToMavenLocal
      - name: Publish Test Report
        uses: mikepenz/action-junit-report@v4
        if: always() # always run even if the previous step fails
        with:
          check_name: JUnit Test Report
          report_paths: '**/build/test-results/**/TEST-*.xml'
          annotate_notice: false
      - name: Coverage Report
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          fail_ci_if_error: true

  artifact_tests:
    runs-on: ubuntu-latest
    env:
      ENABLE_JAR_CACHING: true
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4
      - name: Run artifact tests
        run: >
          ./gradlew
          --stacktrace
          :artifact-tests:check
      - name: Publish Test Report
        uses: mikepenz/action-junit-report@v4
        if: always() # always run even if the previous step fails
        with:
          check_name: JUnit Artifact Test Report
          report_paths: '**/build/test-results/**/TEST-*.xml'
          annotate_notice: false

  publish-snapshot:
    name: Publish snapshot
    needs:
      - build
      - artifact_tests
    runs-on: ubuntu-latest
    environment: snapshot
    continue-on-error: true
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4
      - name: Publish plugin
        run: >
          ./gradlew
          -Pversion=SNAPSHOT-${{ github.sha }}
          assemble publishAllPublicationsToSnapshotRepository
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Snapshot coordinates comment
        uses: thollander/actions-comment-pull-request@v3
        with:
          message: |
            To use the snapshot version of the plugin add this to `settings.gradle.kts`:
            ```kotlin
            pluginManagement {
              repositories {
                maven {
                  name = "JooqDockerPluginSnapshotRepo"
                  url = uri("https://maven.pkg.github.com/monosoul/jooq-gradle-plugin/")
                  credentials {
                    username = "<your GitHub username>"
                    password = "<your GitHub access token with read:packages scope>"
                  }
                }
                gradlePluginPortal()
              }
            }
            ```
            
            And this to `build.gradle.kts`:
            ```kotlin
            plugins {
              id("dev.monosoul.jooq-docker") version "SNAPSHOT-${{ github.sha }}"
            }
            ```
