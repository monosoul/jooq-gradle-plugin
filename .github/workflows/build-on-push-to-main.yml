name: Build

on:
  push:
    branches: [ main ]

concurrency:
  group: ${{ github.ref }}

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4
      - name: Run tests
        run: >
          ./gradlew
          --stacktrace
          check jacocoTestReport -x :artifact-tests:test
      - name: Test publishing
        run: >
          ./gradlew
          --stacktrace
          publishToMavenLocal
      - name: Publish Test Report
        uses: mikepenz/action-junit-report@v4
        if: always() # always run even if the previous step fails
        with:
          check_name: JUnit Test Report
          report_paths: '**/build/test-results/**/TEST-*.xml'
          annotate_notice: false
      - name: Coverage Report
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          fail_ci_if_error: true

  artifact_tests:
    runs-on: ubuntu-latest
    env:
      ENABLE_JAR_CACHING: true
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4
      - name: Run artifact tests
        run: >
          ./gradlew
          --stacktrace
          :artifact-tests:check
      - name: Publish Test Report
        uses: mikepenz/action-junit-report@v4
        if: always() # always run even if the previous step fails
        with:
          check_name: JUnit Artifact Test Report
          report_paths: '**/build/test-results/**/TEST-*.xml'
          annotate_notice: false

  trigger-release:
    name: Trigger release
    needs:
      - build
      - artifact_tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Semantic Release
        uses: cycjimmy/semantic-release-action@v3
        with:
          semantic_version: 19
        env:
          GITHUB_TOKEN: ${{ secrets.RELEASE_TOKEN }}
